const margin = {top: 30, right: 30, bottom: 50, left: 50}
const width = 600 - margin.right - margin.left
const height = 400 - margin.bottom - margin.top

const svg = 
d3.select("#chart").append("svg")
.attr("width", width + margin.right + margin.left)
.attr("height", height + margin.top + margin.bottom)
.append("g")
.attr("transform", "translate(" + margin.left + "," + margin.top + ")")

const tooltip = 
d3.select("#chart").append("div")	
.attr("class", "tooltip")				
.style("opacity", 0)


function draw (data) {
  
  const minSec = d3.min(data, d => d.Seconds)
  data = data.map((obj) => {
    obj.Seconds = obj.Seconds - minSec
    return obj
  })
  
  const xMax = d3.max(data, d => d.Seconds)
  const xMin = d3.min(data, d => d.Seconds)
  
  const yMax = d3.max(data, d => d.Place)
  const yMin = d3.min(data, d => d.Place)

  const xScale = d3.scaleLinear()
  .domain([xMin, xMax]).range([0, width])
  
  const yScale = d3.scaleLinear()
  .domain([yMin, yMax]).range([0, height])
  
  const rScale = d3.scaleLinear()
  .domain([yMin, yMax]).range([6,3])
  
  
  const xAxis = d3.axisBottom(xScale)
  const yAxis = d3.axisLeft(yScale)
  
  function mouseover (d) {
    tooltip.transition()		
    .duration(200)		
    .style("opacity", .9)
    tooltip.html(
    "Name: " + d.Name + "<br>Rank: " + d.Place + 
    "<br>Year: " + d.Year + "<br>" + d.Doping)	
    .style("left", (d3.event.pageX + 20) + "px")		
    .style("top", (d3.event.pageY - 35) + "px")
  }
  
  function mouseout (d) {
    tooltip.transition()		
    .duration(500)		
    .style("opacity", 0)
  }
  
  svg.selectAll("circle")
  .data(data)
  .enter()
  .append("circle")
  .attr("cx", (d) => xScale(d.Seconds))
  .attr("cy", (d) => yScale(d.Place))
  .attr("r", (d) => rScale(d.Place))
  .attr("fill", (d) => {
    if (d.Doping == "") {return "blue"}
    else {return "red"}
  })
  .on("mouseover", mouseover)					
  .on("mouseout", mouseout)


  svg.append("g")
  .attr("transform", `translate(0,${height})`)
  .call(xAxis)

  svg.append("g")
  .attr("transform", "translate(0,0)")
  .call(yAxis)
  
  svg.append("text")
  .attr("text-anchor", "middle")
  .attr("transform", `translate(-30,${height/2})rotate(-90)`)
  .text("Rank")
  
  svg.append("text")
  .attr("text-anchor", "middle")
  .attr("transform", `translate(${width/2},${height+40})`)
  .text("Seconds Behind First Place")
  
  svg.append("circle")
  .attr("fill", "red")
  .attr("cx", 40)
  .attr("cy", 200)
  .attr("r", 5)
  
  svg.append("circle")
  .attr("fill", "blue")
  .attr("cx", 40)
  .attr("cy", 220)
  .attr("r", 5)
  
  svg.append("text")
  .attr("text-anchor", "left")
  .attr("transform", "translate(50,205)")
  .text("Doping Allegations")
  
  svg.append("text")
  .attr("text-anchor", "left")
  .attr("transform", "translate(50,225)")
  .text("Clean")
}

d3.json("https://raw.githubusercontent.com/FreeCodeCamp/ProjectReferenceData/master/cyclist-data.json", draw)              